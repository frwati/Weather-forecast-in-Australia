version: "3"

x-airflow-common: &airflow-common
  image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.8.1}
  environment: &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW_FERNET_KEY:-}
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
    AIRFLOW__CORE__LOAD_EXAMPLES: "true"
    AIRFLOW__API__AUTH_BACKEND: "airflow.api.auth.backend.basic_auth"
    AIRFLOW__SMTP__SMTP_HOST: "smtp.gmail.com"
    AIRFLOW__SMTP__SMTP_PORT: 587
    AIRFLOW__SMTP__SMTP_USER: airflow
    AIRFLOW__SMTP__SMTP_PASSWORD: airflow
    AIRFLOW__SMTP__SMTP_MAIL_FROM: ${SMTP_USER}
    _PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS:- apache-airflow-providers-docker pymongo scikit-learn kagglehub imblearn mlflow bentoml evidently python-multipart}

  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ../src/data:/opt/airflow/src/data
    - ../data/raw_data:/opt/airflow/data/raw_data
    - ../data/split_data:/opt/airflow/data/split_data                                      
    - ../data/normalized_data:/opt/airflow/data/normalized_data
    - ../src/models:/opt/airflow/src/models
    - ../metrics:/opt/airflow/metrics    
    - ../reports:/opt/airflow/reports  
    - ../models/best_parameters:/opt/airflow/models/best_parameters
    - ../models/saved_models:/opt/airflow/models/saved_models 
  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}"
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always

  airflow-webserver:
    <<: *airflow-common
    command: ["airflow", "webserver"]
    ports:
      - "8081:8080"
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: ["airflow", "scheduler"]
    restart: always

  airflow-worker:
    <<: *airflow-common
    command: ["celery", "worker"]
    restart: always

  airflow-init:
    <<: *airflow-common
    command: ["airflow", "db", "init"]
    environment:
      <<: *airflow-common-env
    depends_on:
      - postgres

  flower:
    <<: *airflow-common
    command: ["celery", "flower"]
    ports:
      - 5555:5555
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5555/"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

volumes:
  postgres-db-volume:
